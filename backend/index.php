<?php

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

require_once "AccessToken.php";
require_once "AuthCode.php";
require_once "RestToken.php";
require_once "Logger.php";


if (isset($_GET['username']) && isset($_GET['password'])) {
    $tokens = RestToken::get(false, [$_GET['username'], $_GET['password']]);
    // $tokens = RestToken::get(false);

    if (!$tokens['BhRestToken']) {
        // header("Location: /gleesons/login?status=danger&message=1");
        die('token is borked');
    }

    header('Content-Type: application/json');

    // die($tokens);
    setcookie("BhRestToken", $tokens['BhRestToken'], time() + 600, '/');
    setcookie("refresh_token", $tokens['refresh_token'], time() + 60 * 60 * 24 * 30, '/');
    setcookie("restUrl", $tokens['restUrl'], time() + 60 * 60 * 24 * 30, '/');
    echo json_encode($tokens);

    // header("Location: /gleesons/" . ($_POST['origin'] . $_POST['term']) ?? 'dashboard');
}

if (isset($_GET['refresh'])) {
    $tokens = RestToken::refresh(false, $_GET['refresh'] ?? $_COOKIE['refresh_token']);

    if (!$tokens['BhRestToken']) {
        setcookie("BhRestToken", "", 0, '/');
        setcookie("refresh_token", "", 0, '/');
        // die('invalid');
        return json_encode(tokens);
    }

    setcookie("BhRestToken", $tokens['BhRestToken'], time() + $tokens['expires_in'], '/');
    setcookie("refresh_token", $tokens['refresh_token'], time() + 60 * 60 * 24 * 30, '/');
    setcookie("restUrl", $tokens['restUrl'], time() + 60 * 60 * 24 * 30, '/');

    die(json_encode($tokens));
}

if (isset($_GET['comment'])) {
    $comment = $_GET['comment'];
    $action = $_GET['action'];
    $user = 0; $user += $_GET['userId'];
    $entity = 0; $entity += $_GET['entityId'];

    $note = [
        'action' => $action,
        'commentingPerson' => ['id' => $user],  // The user submitting the comment
        // 'jobOrder' => [
        //     ['id' => 11823,
        //     'title' => 'TestNotePlzWork']                     // The Specific Type Reference of the entity
        // ],
        'comments' => $comment,             // Comment Body
        'personReference' => ['id' => $entity]    // The Person that the comment is in reference to
    ];

    // die(json_encode($note));
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, $_COOKIE["restUrl"] . "entity/Note?BhRestToken=" . $_COOKIE["BhRestToken"]);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($note));
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'PUT');


    $headers = array();
    $headers[] = 'Content-Type: application/json';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
    die($result);
    // die(json_encode($note));
}